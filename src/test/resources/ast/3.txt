mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;
mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;
mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;
mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;
mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;
mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;
mem[7] != 17 --> mem[7] := 17;
nearby[3] = 0 and mem[4] > 2500 --> bud;
{mem[4] > (mem[3] * 400) and mem[3] < 7} --> grow;
ahead[0] < -1 and mem[4] < (500 * mem[3]) --> eat;
((ahead[1] / 10) mod 100) != 17 and ahead[1] > 0 --> attack;
ahead[1] < -5 --> forward;
ahead[2] < -10 and ahead[1] = 0 --> forward;
ahead[3] < -15 and ahead[1] = 0 --> forward;
ahead[4] < -20 and ahead[1] = 0 --> forward;
nearby[0] > 0 and nearby[3] = 0 --> backward;
ahead[1] < -1 and {mem[4] > 2500 or mem[3] > 7} --> serve[(mem[4] / 42)];
random[3] = 1 --> left;
1 = 1 --> wait;